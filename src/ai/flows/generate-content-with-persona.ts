// src/ai/flows/generate-content-with-persona.ts
'use server';
/**
 * @fileOverview Generates content that aligns with a user's personal brand and tone, 
 * considering their resume and personal details stored in a knowledge base.
 *
 * - generateContentWithPersona - A function that generates content considering user persona.
 * - GenerateContentWithPersonaInput - The input type for the generateContentWithPersona function.
 * - GenerateContentWithPersonaOutput - The return type for the generateContentWithPersona function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateContentWithPersonaInputSchema = z.object({
  userDetails: z.string().describe('The user details, including resume and personal information.'),
  contentRequest: z.string().describe('The specific content requested by the user.'),
});
export type GenerateContentWithPersonaInput = z.infer<typeof GenerateContentWithPersonaInputSchema>;

const GenerateContentWithPersonaOutputSchema = z.object({
  generatedContent: z.string().describe('The content generated by the AI, considering the user details.'),
});
export type GenerateContentWithPersonaOutput = z.infer<typeof GenerateContentWithPersonaOutputSchema>;

export async function generateContentWithPersona(input: GenerateContentWithPersonaInput): Promise<GenerateContentWithPersonaOutput> {
  return generateContentWithPersonaFlow(input);
}

const generateContentPrompt = ai.definePrompt({
  name: 'generateContentWithPersonaPrompt',
  input: {schema: GenerateContentWithPersonaInputSchema},
  output: {schema: GenerateContentWithPersonaOutputSchema},
  prompt: `You are an AI content generator. You will generate content for the user based on their request, considering their persona (resume and personal details) to maintain tone and align with their brand.

User Details: {{{userDetails}}}
Content Request: {{{contentRequest}}}

Generated Content:`, // Removed handlebars if statement.
});

const generateContentWithPersonaFlow = ai.defineFlow(
  {
    name: 'generateContentWithPersonaFlow',
    inputSchema: GenerateContentWithPersonaInputSchema,
    outputSchema: GenerateContentWithPersonaOutputSchema,
  },
  async input => {
    const {output} = await generateContentPrompt(input);
    return output!;
  }
);
